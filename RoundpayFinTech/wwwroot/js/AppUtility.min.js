"use strict"; var ChangePass = function (t) { preloader.load(), $.post("/Change-Password", { IsMandate: t }, function (e) { resultReload(e), $("#" + an.id).remove(), mdlA.id = "myalert", mdlA.content = e, mdlA.options.backdrop = "static", !0 === t && (mdlA.options.keyboard = !1), mdlA.alert(mdlA.size.small), $("button.close span,#mdlCancel").click(() => mdlA.dispose()), $("#btnChangePass").click(function () { let t = $validator, e = { oldp: $("#txtOldPassword"), newp: $("#txtNewPassword"), confirmp: $("#txtConfirmPassword") }, n = { oldp: "" === e.oldp.val().trim(), newp: "" === e.newp.val().trim(), confirmp: "" === e.confirmp.val().trim(), samep: e.newp.val().trim() === e.oldp.val().trim(), notsameconfirm: e.newp.val().trim() !== e.confirmp.val().trim() }; if (t.showErrorFor(e.oldp, "Enter Old Password", n.oldp), t.showErrorFor(e.newp, "Enter New Password", n.newp), t.showErrorFor(e.confirmp, "Enter Confirm Password", n.confirmp), n.err = n.oldp || n.newp || n.confirmp, n.err) return !1; if (t.showErrorFor(e.newp, "New Password Cannot Be Same As Old Password", n.samep), n.err = n.samep, n.err) return !1; if (t.showErrorFor(e.confirmp, "Confirm Password Do Not Match", n.notsameconfirm), n.err = n.notsameconfirm, n.err) return !1; var o = { UserId: "", OldPassword: e.oldp.val().trim(), NewPassword: e.newp.val().trim() }; $.ajax({ type: "POST", url: "/ChangePassword", dataType: "json", contentType: "application/json", data: JSON.stringify(o), success: function (t) { resultReload(t), an.title = t.statuscode === an.type.success ? "Well done" : "Oops", an.content = t.msg, an.alert(t.statuscode), t.statuscode === an.type.success && mdlA.dispose() }, error: function (t, e) { an.title = "Oops! Error", an.content = 404 === t.status ? "Requested path not find" : 0 === t.status ? "Internet is not connected" : "Server error", an.alert(an.type.failed), "parsererror" === e && reload() }, complete: () => btnLdr.Stop(e.btn) }) }) }).fail(t => { an.title = "Oops", an.content = 0 === t.status ? "Internet Connection was broken" : "Server error", an.alert(an.type.failed) }).always(() => preloader.remove()) }, ChangePin = function (t) { preloader.load(), $.post("/Change-Pin", { IsMandate: t }, function (e) { resultReload(e), $("#" + an.id).remove(), mdlA.id = "myalert", mdlA.content = e, mdlA.options.backdrop = "static", !0 === t && (mdlA.options.keyboard = !1), mdlA.alert(mdlA.size.small), $("button.close span,#mdlCancel").click(() => mdlA.dispose()), $("#btnChangePass").click(function () { var t = $validator, e = { oldp: $("#txtOldPassword"), newp: $("#txtNewPassword"), confirmp: $("#txtConfirmPassword") }, n = { oldp: "" === e.oldp.val().trim(), newp: "" === e.newp.val().trim(), confirmp: "" === e.confirmp.val().trim(), samep: e.newp.val().trim() === e.oldp.val().trim(), notsameconfirm: e.newp.val().trim() !== e.confirmp.val().trim() }; if (t.showErrorFor(e.oldp, "Enter Password", n.oldp), t.showErrorFor(e.newp, "Enter New Pin", n.newp), t.showErrorFor(e.confirmp, "Enter Confirm Pin", n.confirmp), n.err = n.oldp || n.newp || n.confirmp, n.err) return !1; if (t.showErrorFor(e.newp, "New Pin Cannot Be Same As Old Password", n.samep), n.err = n.samep, n.err) return !1; if (t.showErrorFor(e.confirmp, "Confirm Pin Do Not Match", n.notsameconfirm), n.err = n.notsameconfirm, n.err) return !1; var o = { UserId: "", OldPassword: e.oldp.val().trim(), NewPassword: e.newp.val().trim() }; $.ajax({ type: "POST", url: "/ChangePin", dataType: "json", contentType: "application/json", data: JSON.stringify(o), success: function (t) { resultReload(t), an.title = t.statuscode === an.type.success ? "Well done" : "Oops", an.content = t.msg, an.alert(t.statuscode), t.statuscode === an.type.success && mdlA.dispose() }, error: function (t, e) { an.title = "Oops! Error", an.content = 404 === t.status ? "Requested path not find" : 0 === t.status ? "Internet is not connected" : "Server error", an.alert(an.type.failed), "parsererror" === e && reload() }, complete: () => btnLdr.Stop(e.btn) }) }) }).fail(t => { an.title = "Oops", an.content = 0 === t.status ? "Internet Connection was broken" : "Server error", an.alert(an.type.failed) }).always(() => preloader.remove()) }, recentLoginActivity = () => { $.post("/recent-login-activity", { TopRow: 100, outputInjson: !0 }, function (t) { let e = '<div class="table-responsive"><table class="table" id="recentLoginActivity"><thead><tr><th>#</th><th>UserId</th><th>IP</th><th>Remark</th><th>Date</th><th>Longitude</th><th>Latitude</th><th></th></tr><thead><tbody>{{tr}}</tbody></table></div>', n = ""; for (let e = 0; e < t.length; e++)n += `<tr><td>${e + 1} ${t[e].isActive ? '<div class="led-green led-sm float-right">' : ""}</td><td>${"" !== t[e].loginMobile ? t[e].loginMobile : t[e].prefix + t[e].loginID}</td><td>${t[e].requestIP}</td><td>${t[e].commonStr}</td><td>${t[e].commonStr2}</td><td>${t[e].longitude}</td><td>${t[e].latitude}</td><td>${0 !== t[e].latitude && 0 !== t[e].longitude ? '<a href="https://www.google.com/maps/@' + t[e].latitude + "," + t[e].longitude + ',15z" target="_blank"><i class="fas fa-map text-info"></i></a>' : ""} </td></tr>`; mdlA.title = "Recent Login Activity", mdlA.id = "recentLoginActivityWin", mdlA.content = e.replace("{{tr}}", n), mdlA.options.backdrop = "static", mdlA.modal(mdlA.size.xlarge), $("#recentLoginActivity").fixTableHeader() }).fail(t => { an.title = "Oops", an.content = 0 === t.status ? "Internet Connection was broken" : "Server error", an.alert(an.type.failed) }).always(() => preloader.remove()) }, viewBrand = () => { $.post("/Brand").done(t => { mdlA.id = "brandView", mdlA.content = t, mdlA.title = "Brand", mdlA.modal(mdlA.size.default) }).fail(t => { an.title = "Oops", an.content = 0 === t.status ? "Internet Connection was broken" : "Server error", an.alert(an.type.failed) }) }, showEmailAndSocial = () => { var t = new Date, e = t.getFullYear() + "" + (t.getMonth() + 1) + t.getDate(), n = localStorage.getItem("SAlertTime", e); e !== n && $.post("/_ShowSocialPopup").done(t => { !1 === t ? console.log(t) : (mdlA.id = "ShowSocialPopup", mdlA.title = "", mdlA.headerClass = "h3 text-danger text-center text-monospace", mdlA.content = t, mdlA.modal(mdlA.size.default, () => { localStorage.setItem("SAlertTime", e) })) }) }; $.ajax({ type: "POST", url: "/LoginInfo", dataType: "json", contentType: "application/json", success: function (t) { void 0 === t.name ? reload() : (setInfo(t), $("body").removeAttr("class")) }, error: function (t, e) { an.title = "Oops! Error", an.content = 404 === t.status ? "Requested path not find" : 0 === t.status ? "Internet is not connected" : "Server error", an.alert(an.type.failed), "parsererror" === e && reload() } }), $.post("/mybal").done(t => { if (!0 === t.isShowLBA) { var e = `<div class="col-md-12"><div class="col-md-12 text-center"><img src="/Image/iconMsg/9.png"><div class="">You Have Low Balance</div><div><small>Your Current Balance : ${t.balance}</small></div><button class="btn btn-outline-success btn-lg" id="btnRedirectToFund">Fund Request</button>${t.isAddMoneyEnable ? '<button class="btn btn-outline-info btn-lg" id="btnRedirectToAddMoney">Add Money</button>' : "<span></span>"}</div>`; mdlA.id = "lowBalanceAlert", mdlA.title = "Low Balance Alert", mdlA.headerClass = "h3 text-danger text-center text-monospace", mdlA.content = e, mdlA.modal(mdlA.size.large), $("#btnRedirectToFund").click(() => { sessionStorage.setItem("IsAlert", 1), window.location.href = "/fund-request" }), $("#btnRedirectToAddMoney").click(() => { sessionStorage.setItem("IsAlert", 1), window.location.href = "/addmoney" }) } else showEmailAndSocial(); $(".custom.bal").html(`<i class="fas fa-wallet text-warning"></i> ${t.sb}`), t.isP ? ChangePass(!0) : t.isPN && ChangePin(!0) }).fail(t => { an.title = "Oops", an.content = 0 === t.status ? "Internet Connection was broken" : "Server error", an.alert(an.type.failed) }), $.post("/IsVendor").done(t => { t.statuscode === an.type.success && t.commonBool && $("ul.navbar-nav").append('<li class="nav-item dropdown"><a class="nav-link dropdown-toggle" href="#" id="dwnShopping" data-toggle="dropdown">Shopping</a><div class="dropdown-menu" area-labelledby="dwnShopping"><a href="javascript:viewBrand()" class="dropdown-item">Brand</a><a href="/AddProduct" class="dropdown-item">Add Product</a><a href="/AllProduct" class="dropdown-item">All Product</a><a href="/shopping/OrderList" class="dropdown-item">Orders</a><a href="/shopping/OrderReport" class="dropdown-item">Orders Report</a></div></li>') }); var closeNotification = (t, e, n, o = !1) => { $.post("/CloseNotification", { id: t, userID: e, EntryDate: n }).done(e => { 1 === e.statuscode && (o || ($(`.notification-${t}`).remove(), 0 === $("div.notification").length && $(".markRead").remove())) }) }; (t => { if ("True" == $$IsWebNotify) { t.loadNotification = t.loadNotification || {}; var e, n, o = !1; t.loadNotification = (a => { t.post("/WebNotification", { IsShowAll: a }).done(r => { r.isWebNotification && (!1 === a ? e = r.notification : n = r.notification, !1 === a ? (0 === t("#IconNotification").length ? t(".top-nav li:last").before(`<li><a class="nav-link text-white font-bold" id="IconNotification"><i class="fa fa-bell text-warning"></i><sup style="top:-1.5em">${e.length}</sup></a></li>`) : (t("#IconNotification").closest("li").find("sup").text(e.length), t("#NotificationSection").remove()), t.when(t("body").append('<div id="NotificationSection" class="position-fixed notification-div r-b"></div>')).then(() => { e.length > 0 && (t("#NotificationSection").append('<div class="markRead"><span class="form-control"><input type="checkbox" id="chkRead"> <label>Mark all as read</label></span></div>'), t("#chkRead").click(e => { t(e.currentTarget).is(":checked") && t.post("/markallread").done(e => { t("#NotificationSection").remove() }) })); for (let n = 0; n < e.length; n++) { let o = e[n]; t("#NotificationSection").append(`<div class="alert-dismissible p-2 mt-1 notification notification-${o.id}"  onmouseover="closeNotification('${o.id}', '${o.userID}','${o.entryDate}',true)"><span class="float-right close" onclick="closeNotification('${o.id}', '${o.userID}','${o.entryDate}')"><i class="fa fa-times"></i></span><strong class="alert-heading">${o.title}!</strong>  <div class="col-sm-12 text-center ${"" === o.img ? "d-none" : ""}"><img src="/Image/Webnotification/${o.img}" style="height:250px;object-fit:cover"/></div><p style="font-family:cursive">${o.notification}<br/><small class="float-right"><i class="fa fa-clock pr-1"></i>${o.entryDate}</small></p></div>`) } }), t("#IconNotification").click(e => { if (void 0 !== n && n.length > 0) if (t(e.currentTarget).parent("li").find("div").length > 0) t(e.currentTarget).parent("li").find("div").remove(); else { let o = ""; for (let t = 0; t < n.length; t++) { let e = n[t], a = n[t].isSeen ? '<i class="fa fa-check-circle text-success"></i>' : ""; o += `<li><strong>${e.title}</strong><p><span>${a}</span> ${e.notification}</br><small class="float-right"><i class="fa fa-clock pr-1"></i>${e.entryDate}</small></p></li>` } t(e.currentTarget).parent("li").append(`<div class="IconNotification"><ul>${o}</ul></div>`) } else 0 === t(e.currentTarget).parent("li").find("ul").length ? !1 === o && (t.loadNotification(!0), o = !0) : t(e.currentTarget).find("ul").remove() })) : t("#IconNotification").click()) }) }), t.loadNotification(!1), setInterval(() => t.loadNotification(!1), 6e4) } })($);