$.require("/js/component.alert.min.js"), $.require("/js/component.modal.min.js"), $.require("/js/cookie.min.js"); var page = "/", errorMsg = $("#errorMsg"), LoginStatus = { FAILED: -1, SUCCESS: 1, OTP: 2, GOOGLEAUTHENABLED: 3 }, AlertStatus = { RED: 0, GREEN: 1, BLUE: 2 }, geoLocationDetail = { Latitude: "", Longitude: "" }, preloader = { load: function () { $("body").append('<div class="loading">Loading&#8230;</div>') }, remove: function () { $(".loading").remove() } }, Alerts = function (t, e) { errorMsg.removeClass("text-danger text-success text-info"), errorMsg.removeClass("hide"), errorMsg.addClass(0 === e ? "text-danger" : 1 === e ? "text-success" : "text-info"), errorMsg.text(t) }, geoLocation = () => { navigator.permissions.query({ name: "geolocation" }).then(t => { if ("prompt" === t.state || "granted" === t.state) { navigator.geolocation && navigator.geolocation.getCurrentPosition(function (t) { geoLocationDetail.Latitude = t.coords.latitude, geoLocationDetail.Longitude = t.coords.longitude }) } else "denied" === t.state && (an.title = "Alert", an.content = "Your location permission is denied.Please allow location first.", an.alert(an.type.warning)) }) }, Login = function () { errorMsg.removeClass("hide"); var t = $("#txtUser"), e = $("#txtPassword"), o = $("#ddlLType"), a = $("#txtOTP"); t.removeClass("is-invalid"), e.removeClass("is-invalid"); var n = t.val(), s = e.val(), l = o.val(); if ("" === n) return t.addClass("is-invalid").focus(), Alerts("Enter User ID", AlertStatus.RED), !1; if (t.addClass("is-valid"), "" === s) return e.addClass("is-invalid").focus(), Alerts("Enter Password", AlertStatus.RED), !1; if (e.addClass("is-valid"), $("body").html().indexOf("txtOTP") > -1 && "" == $("#txtOTP").val()) return a.addClass("is-invalid").focus(), Alerts("Enter OTP", AlertStatus.RED), !1; if ($("body").html().indexOf("txtGooglePin") > -1 && "" == $("#txtGooglePin").val()) return a.addClass("is-invalid").focus(), Alerts("Please Enter Google PIN", AlertStatus.RED), !1; if ("http:" === window.location.protocol && ("" === geoLocationDetail.Latitude || "" === geoLocationDetail.Longitude)) return geoLocation(), !1; let r = { LoginMobile: n, LoginTypeID: l, Password: s, OTP: null != a.val() ? a.val() : "", GooglePin: $("#txtGooglePin").val(), Latitude: geoLocationDetail.Latitude ? geoLocationDetail.Latitude : 0, Longitude: geoLocationDetail.Longitude ? geoLocationDetail.Longitude : 0 }; var i = "" === r.OTP ? "Login" : "Login/OTP"; void 0 !== r.GooglePin && "" !== r.GooglePin && (i = "/login/VerifyGoogleAuthenticatorSetup"), an.id = "Loginalert", an.autoClose = 5; let d = Q.cookie.get("isBrowserBlock"); null == d || "true" !== d ? (preloader.load(), $.ajax({ type: "POST", url: i, dataType: "json", contentType: "application/json", data: JSON.stringify(r), success: function (t) { if (void 0 === t.statuscode || t.statuscode === LoginStatus.FAILED) Alerts(t.msg, AlertStatus.RED), an.title = "Oops", an.content = t.msg, an.alert(an.type.failed), t.commonBool && Q.cookie.set("isBrowserBlock", t.commonBool, .08); else if (t.statuscode === LoginStatus.SUCCESS) an.title = "Wow", an.content = t.msg, an.alert(an.type.success), location.href = page + t.path; else if (t.statuscode === LoginStatus.OTP) { let o = '<div class="form-group"><input id="txtOTP" class="form-control" placeholder="Please Enter OTP"/></div>'; -1 == $("body").html().indexOf("txtOTP") && e.parent(".input-group").after(o), $("#btnResendOTP").html('<a href="javascript:void(0)">Resend OTP</a>').css({ position: "relative", top: "-16px", right: "-182px" }).click(function () { _ReSendOTP() }), an.title = "Info", an.content = t.msg, an.alert(an.type.info) } else if (t.statuscode === LoginStatus.GOOGLEAUTHENABLED) { let o = `<div class="form-group"><input id="txtGooglePin" autocomplete="off" class="form-control" placeholder="${t.msg}"/></div>`; -1 === $("body").html().indexOf("txtGooglePin") && e.parent(".input-group").after(o), an.title = "Info", an.content = t.msg, an.alert(an.type.info), $("#txtGooglePin").focus() } else -2 === t.statuscode && geoLocation() }, statusCode: { 500: function () { Alerts("Oops! Server error", AlertStatus.RED) }, 0: function () { Alerts("Oops! Internet Connection was broken", AlertStatus.RED) } }, error: function (t, e) { Alerts(e, AlertStatus.RED) }, complete: function () { preloader.remove() } })) : Alerts("Account is blocked.Please contact to support team.", AlertStatus.RED) }, _ReSendOTP = function () { $.post("/ResendOTP").done(function (t) { an.title = "Info", an.content = t.msg, an.alert(an.type.info) }) }, forgetPopUp = function () { preloader.load(), $.post("/forgetPopUp").done(function (t) { $("#" + an.id).remove(), mdlA.id = "mdlForgetPass", mdlA.content = t, mdlA.options.backdrop = "static", mdlA.options.keyboard = !1, mdlA.title = "Forget Password", mdlA.modal(mdlA.size.default) }).fail(function (t) { an.title = "Oops", an.content = 0 === t.status ? "Internet Connection was broken" : "Server error", an.alert(an.type.failed) }).always(() => preloader.remove()) }, BeforeLoginPopUp = function () { preloader.load(); let t = JSON.parse(localStorage.getItem("IsBLPShowed")), e = (new Date).getDate(); null !== t && t._Value && t._date === e || $.post("/BeforeLoginPopup", {}, function (t) { "" !== t && ($("#" + an.id).remove(), mdlA.id = "mdlForgetPass", mdlA.content = t, mdlA.options.backdrop = "static", mdlA.options.keyboard = !1, mdlA.alert(mdlA.size.large)), $("button.close span,#mdlCancel").click(() => mdlA.dispose(function () { let t = { _date: (new Date).getDate(), _Value: !0 }; localStorage.setItem("IsBLPShowed", JSON.stringify(t)) })) }).fail(t => { an.title = "Oops", an.content = 0 === t.status ? "Internet Connection was broken" : "Server error", an.alert(an.type.failed) }).always(() => preloader.remove()) }, Forget = function () { btnLdr.addClass = "btn-dark", btnLdr.removeClass = "btn-outline-dark", btnLdr.Start($("#btnfoget"), "Requesting"), preloader.load(); let t = $("#txtFUser"), e = $("#ddlFLType"), o = $("#txtMobileOTP"), a = $("#txtEmailOTP"), n = { LoginMobile: t.val(), LoginTypeID: e.val(), MobileOTP: null != o.val() ? o.val() : "", EmailOTP: null != a.val() ? a.val() : "" }; if (null == n.LoginMobile || "" == n.LoginMobile) return t.addClass("is-invalid").focus(), $("#alert").text("Enter User ID").addClass("text-danger"), btnLdr.Stop($("#btnfoget")), preloader.remove(), !1; $.ajax({ type: "POST", url: "/forget", dataType: "json", contentType: "application/json", data: JSON.stringify(n), success: function (t) { if (2 == t.statuscode || "Invalid OTP" == t.msg) { if (an.title = "OTP", !$("#txtMobileOTP").length && !$("#txtEmailOTP").length) { let t = '<div class="form-group"><input id="txtMobileOTP" class="form-control" placeholder="Please enter mobile OTP"/></div><div class="form-group"><input id="txtEmailOTP" class="form-control" placeholder="Please enter email OTP"/></div>'; $("#txtFUser").parent(".form-group").after(t) } $("#btnfoget").text("Submit OTP") } $("#alert").text(t.msg).addClass(t.statuscode === an.type.success ? "text-success" : "text-danger"), 1 === t.statuscode && (an.title = "Wow", an.content = t.msg, an.alert(an.type.success), mdlA.dispose()) }, statusCode: { 500: function () { $("#alert").text("Oops! Server error").addClass("text-danger"), Alerts("Oops! Server error", AlertStatus.RED) }, 0: function () { $("#alert").text("Oops! Internet Connection was broken").addClass("text-danger"), Alerts("Oops! Internet Connection was broken", AlertStatus.RED) } }, error: function (t, e) { Alerts(e, AlertStatus.RED) }, complete: function () { btnLdr.Stop($("#btnfoget")), preloader.remove() } }) }, btnLdr = { removeClass: "", addClass: "", Start: function (t, e) { var o = "<i class='fas fa-circle-notch fa-spin'></i> " + e; t.attr("original-text", t.html()), t.html(o), t.removeClass(this.removeClass).addClass(this.addClass) }, Stop: function (t) { t.html(t.attr("original-text")), t.removeClass(this.addClass).addClass(this.removeClass) } }, Getnews = () => { preloader.load(), $.post("/l-news").done(t => $("#divNews").append(t.newsDetail)).fail(t => { an.title = "Oops", an.content = 0 == t.status ? "Internet Connection was broken" : "Server error", an.alert(an.type.failed) }).always(() => preloader.remove()) }; $(document).ready(function () { BeforeLoginPopUp(), Getnews(), $("#btnLogin").click(() => Login()), an.id = "myalert", geoLocation() }), $(document).on("keypress", $("button:last"), function (t) { 13 === (t.keyCode ? t.keyCode : t.which) && $("button:last").click() });